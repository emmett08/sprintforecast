name: ci

on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build-and-publish:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - run: python -m pip install --upgrade pip build twine

      - name: Build wheel
        run: python -m build --wheel

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*.whl

  pypi-install-test:
    needs: [build-and-publish]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - run: python -m pip install --upgrade pip
      - run: pip install sprintforecast

      - run: sprintforecast --help
